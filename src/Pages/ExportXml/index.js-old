import React, { Component  } from "react";
import Layout from '../../Component/Layout';
import {Form , FormGroup , Label , Button , Alert } from 'reactstrap';
import axiosInstance from '../../instance/axiosInstance';
import CSVReader from 'react-csv-reader';

class ExportXml extends Component {

     constructor(props){
          super(props);
          
          this.state = {
              errors : {},
              session : {},
              success : {},
              data : {}
          }         
  
          this.handleSubmit = this.handleSubmit.bind(this);      
          
     }


     handleChange = (csvdata, fileInfo, originalFile) => {
          
          console.log(csvdata,fileInfo,originalFile)

          this.setState({
              data : {
                  ...this.state.data,
                  ['uploadCsv'] : csvdata
              },
              errors : {
                  ...this.state.errors,
                  ['uploadCsv'] : ''
              }
          });          
     }
  
     validation = () => {
          const {data} = this.state;
          let errors = {};
          
          if(data.uploadCsv === '' || data.uploadCsv === undefined) errors.uploadCsv = 'Upload Csv can not be blank.';
  
          return errors;
     }
  
  
     handleSubmit = (e) => {
          e.preventDefault();
          const { data } = this.state;
          let errors = this.validation();
          
          if(Object.keys(errors).length === 0){
              
              try {
                  
                  const response = axiosInstance.post('importBooks', {data});
                  
                  response.then((response) => {
                      
                    const {  messages , status } = response.data;
                    
                    if(status === false){
                         this.setState({
                              errors : {
                                   'messages' : messages,
                                   'isActive' : true
                              },
                              success:{}
                         })
                    }else if(status === true){
                         this.setState({
                              success : {
                                   'messages' : messages,
                                   'isActive' : true
                              },
                              data:{
                                   ...this.state.data,
                                   ['uploadCsv'] : ''
                              },
                              errors:{}
                         });
                    }                    
  
                  });
                  
                  return data;
              } catch (error) {
                  console.log(error);
              }
             
              
          }else{
              
              this.setState({errors});
          }        
  
     }
  

     render() {   
          const {errors , data , success  } = this.state;
          
          return (
          <Layout>
               <main className="main-content">
                    <div className="section-padding">
                         <div className="container">
                              <div className="middle-content">
                              <Alert color="success" isOpen={success.isActive ? true : false}>{success.messages}</Alert>
                              <Alert color="danger" isOpen={errors.isActive ? true : false}>{errors.messages}</Alert>
                              <Form encType='multipart/form-data' onSubmit={this.handleSubmit} >
                                   <FormGroup>
                                        <Label htmlFor="import">Import Csv</Label>
                                        <CSVReader 
                                        onFileLoaded={(data, fileInfo, originalFile) => this.handleChange(data, fileInfo, originalFile)} 
                                        inputId="uploadCsv"
                                        inputName="uploadCsv"  />
                                        <div className="invalid-feedback" style={{'display':errors.uploadCsv?'block':'none'}}>{errors.uploadCsv}</div>
                                   </FormGroup>
                                   <FormGroup>
                                        <Button type="submit" >Import Csv</Button>
                                   </FormGroup>
                              </Form> 
                              </div>
                         </div>
                    </div>
                    
               </main>
          </Layout>
          )
     }
}

export default ExportXml
